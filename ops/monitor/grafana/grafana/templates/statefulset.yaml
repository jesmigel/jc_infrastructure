---
# Source: grafana/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana-5-3-0
  namespace: grafana
  labels:
    helm.sh/chart: grafana-5.3.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana-5-3-0
    app.kubernetes.io/version: "7.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana-5-3-0
  serviceName: grafana-5-3-0-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana-5-3-0
      annotations:
        checksum/config: 095c6e49524f477d5552353f8878a4b4cef0eec63e36336308c425df6e4aa19d
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/secret: 281073fbd269d65928e07eecf1874e9cb329f730a283d5fdc01ef7173b35b048
    spec:
      
      serviceAccountName: grafana-5-3-0
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      #initContainers:
      #  - name: init-chown-data
      #    image: "busybox:1.31.1"
      #    imagePullPolicy: IfNotPresent
      #    securityContext:
      #      runAsUser: 0
      #    command: ["chown", "-R", "472:472", "/var/lib/grafana"]
      #    resources:
      #      {}
      #    volumeMounts:
      #      - name: storage
      #        mountPath: "/var/lib/grafana"
      containers:
        - name: grafana
          image: "grafana/grafana:7.0.3"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          envFrom:
            - secretRef:
                name: grafana-5-3-0
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: grafana-5-3-0
      # nothing
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 10Gi
